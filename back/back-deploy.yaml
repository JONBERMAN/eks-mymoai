apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: fairytale
  name: back-deploy-seoul
  namespace: fairytale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fairytale
  template:
    metadata:
      labels:
        app: fairytale
    spec:
      imagePullSecrets:
      - name: harbor-registry-secret
      containers:
      - image: 192.168.2.141:443/k8s-project/fairytale:v7
        name: fairytale-frankfrut
        ports:
        - containerPort: 8082


        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: back-secret
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: back-secret
              key: AWS_SECRET_ACCESS_KEY
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: back-secret
              key: DB_WRITE_PASSWORD
        - name: DB_WRITE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_WRITE_USERNAME
        - name: DB_READ_USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_READ_USERNAME
        - name: DB_WRITE_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_WRITE_URL
        - name: DB_READ_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_READ_URL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: member
  name: back-member
  namespace: member
spec:
  replicas: 1
  selector:
    matchLabels:
      app: member
  template:
    metadata:
      labels:
        app: member
    spec:
      imagePullSecrets:
      - name: harbor-registry-secret
      containers:
      - image: 192.168.2.141:443/k8s-project/member:v7
        name: back-member
        ports:
        - containerPort: 8081

        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

  
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: back-secret
              key: DB_WRITE_PASSWORD
        - name: DB_WRITE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_WRITE_USERNAME
        - name: DB_READ_USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_READ_USERNAME
        - name: DB_WRITE_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_WRITE_URL
        - name: DB_READ_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_READ_URL

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bookstore
  name: back-bookstore
  namespace: bookstore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookstore
  template:
    metadata:
      labels:
        app: bookstore
    spec:
      imagePullSecrets:
      - name: harbor-registry-secret
      containers:
      - image: 192.168.2.141:443/k8s-project/bookstore:v7
        name: back-bookstore
        ports:
        - containerPort: 8083

        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: back-secret
              key: DB_WRITE_PASSWORD
        - name: DB_WRITE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_WRITE_USERNAME
        - name: DB_READ_USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_READ_USERNAME
        - name: DB_WRITE_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_WRITE_URL
        - name: DB_READ_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_READ_URL
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: report
  name: back-report
  namespace: report
spec:
  replicas: 1
  selector:
    matchLabels:
      app: report
  template:
    metadata:
      labels:
        app: report
    spec:
      imagePullSecrets:
      - name: harbor-registry-secret
      containers:
      - image: 192.168.2.141:443/k8s-project/report:v7
        name: back-report
        ports:
        - containerPort: 8083

        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: back-secret
              key: DB_WRITE_PASSWORD
        - name: DB_WRITE_USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_WRITE_USERNAME
        - name: DB_READ_USERNAME
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_READ_USERNAME
        - name: DB_WRITE_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_WRITE_URL
        - name: DB_READ_URL
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: DB_READ_URL
---
apiVersion: v1
kind: Service
metadata:
  name: fairytale-service
  namespace: fairytale
spec:
  selector:
    app: fairytale
  ports:
  - name: seoul
    targetPort: 8082
    port: 8082
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: member-service
  namespace: member
spec:
  selector:
    app: member
  ports:
  - name: member
    targetPort: 8081
    port: 8081
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: bookstore-service
  namespace: bookstore
spec:
  selector:
    app: bookstore
  ports:
  - name: member
    targetPort: 8083
    port: 8083
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: report-service
  namespace: report
spec:
  selector:
    app: report
  ports:
  - name: report
    targetPort: 8084
    port: 8084
  type: ClusterIP


